std::string ShaderEnvMap::fragmentShaderText =
"\n"
"PRECISON;\n"
"VARYING_FRAG vec3 EyeVector, Normal, LightDir;\n"
"#ifdef WITH_COLOR\n"
"VARYING_FRAG vec3 Color;\n"
"#endif\n"
"uniform vec4 materialDiffuse;\n"
"uniform vec4 materialAmbient;\n"
"uniform samplerCube EnvMap;\n"
"uniform float blendCoef;\n"
"\n"
"FRAG_OUT_DEF;\n"
"void main()\n"
"{\n"
"	vec3 N = normalize (Normal);\n"
"	vec3 L = normalize (LightDir);\n"
"	float lambertTerm = dot(N,L);\n"
"\n"
"	vec4 finalColor = materialAmbient;\n"
"	\n"
"	#ifdef DOUBLE_SIDED\n"
"	if (lambertTerm < 0.0)\n"
"	{\n"
"		N = -1.0*N;\n"
"		lambertTerm = -1.0*lambertTerm;\n"
"	#else\n"
"	if (lambertTerm > 0.0)\n"
"	{\n"
"	#endif\n"
"		#ifndef WITH_COLOR\n"
"		vec4 col = materialDiffuse;\n"
"		#else\n"
"		vec4 col = vec4(Color,0.0) ;\n"
"		#endif\n"
"		\n"
"		vec3 R  = reflect(-EyeVector,N);\n"
"		finalColor += mix(col,textureCube(EnvMap,R),blendCoef) * lambertTerm;\n"
"	}	\n"
"	gl_FragColor=finalColor;\n"
"}\n";

