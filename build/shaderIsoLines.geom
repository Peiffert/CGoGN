std::string ShaderIsoLines::geometryShaderText =
"uniform mat4 NormalMatrix;\n"
"uniform mat4 ModelViewMatrix;\n"
"uniform mat4 ModelViewProjectionMatrix;\n"
"uniform vec4 colorMin;\n"
"uniform vec4 colorMax;\n"
"uniform float vmin;\n"
"uniform float vmax;\n"
"uniform int vnb;\n"
"\n"
"VARYING_IN float  attribData[3];\n"
"VARYING_OUT vec4 ColorFS;\n"
"\n"
"\n"
"float bary(float x, float xmin, float xmax)\n"
"{\n"
"	return (x-xmin)/(xmax-xmin);\n"
"}\n"
"\n"
"\n"
"/*\n"
"* warning works only with triangles\n"
"*/\n"
"void isoLine(float x)\n"
"{\n"
"	ColorFS = mix(colorMin,colorMax,(x-vmin)/(vmax-vmin));\n"
"\n"
"	float b01 = bary(x,attribData[0],attribData[1]);\n"
"	float b02 = bary(x,attribData[0],attribData[2]);\n"
"	float b12 = bary(x,attribData[1],attribData[2]);\n"
"	\n"
"	bool in01 = (b01>=0.0) && (b01<=1.0);\n"
"	bool in02 = (b02>=0.0) && (b02<=1.0);\n"
"	bool in12 = (b12>=0.0) && (b12<=1.0);\n"
"	\n"
"	if (in01)\n"
"	{\n"
"		vec4 pos01 = ModelViewProjectionMatrix * mix(POSITION_IN(0),POSITION_IN(1),b01);	\n"
"		if (in02)\n"
"		{\n"
"		// line 01 - 02\n"
"			gl_Position = pos01;\n"
"			EmitVertex();\n"
"			vec4 pos =  mix(POSITION_IN(0),POSITION_IN(2),b02);\n"
"			gl_Position = ModelViewProjectionMatrix *  pos;\n"
"			EmitVertex();\n"
"			EndPrimitive();\n"
"		}\n"
"		if (in12)\n"
"		{\n"
"		// line 01 - 12\n"
"			gl_Position = pos01;\n"
"			EmitVertex();\n"
"			vec4 pos =  mix(POSITION_IN(1),POSITION_IN(2),b12);\n"
"			gl_Position = ModelViewProjectionMatrix *  pos;\n"
"			EmitVertex();\n"
"			EndPrimitive();\n"
"		}\n"
"	}\n"
"	if (in02 && in12)\n"
"	{\n"
"	// line 12 - 02\n"
"		vec4 pos =  mix(POSITION_IN(0),POSITION_IN(2),b02);\n"
"		gl_Position = ModelViewProjectionMatrix *  pos;\n"
"		EmitVertex();\n"
"		pos =  mix(POSITION_IN(1),POSITION_IN(2),b12);\n"
"		gl_Position = ModelViewProjectionMatrix *  pos;\n"
"		EmitVertex();\n"
"		EndPrimitive();\n"
"	}\n"
"}\n"
"\n"
"\n"
"void main(void)\n"
"{\n"
"	float inc = (vmax-vmin)/float(vnb);\n"
"	for (int i=0; i<vnb; ++i)\n"
"	{\n"
"		float v = vmin + float(i)*inc;\n"
"		isoLine(v);\n"
"	}\n"
"}\n";

