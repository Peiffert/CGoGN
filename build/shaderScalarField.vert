std::string ShaderScalarField::vertexShaderText =
"\n"
"ATTRIBUTE vec3 VertexPosition;\n"
"ATTRIBUTE float VertexScalar;\n"
"uniform mat4 ModelViewProjectionMatrix;\n"
"uniform float minValue;\n"
"uniform float maxValue;\n"
"uniform int colorMap;\n"
"uniform int expansion;\n"
"VARYING_VERT vec3 color;\n"
"VARYING_VERT float scalar;\n"
"INVARIANT_POS;\n"
"\n"
"#define M_PI 3.1415926535897932384626433832795\n"
"\n"
"float scale_and_clamp_to_0_1(float x, float min, float max)\n"
"{\n"
"	float v = (x - min) / (max - min);\n"
"	return v < 0.0 ? 0.0 : (v > 1.0 ? 1.0 : v);\n"
"}\n"
"\n"
"float scale_expand_within_0_1(float x, int n)\n"
"{\n"
"	for (int i = 1; i <= n; i++)\n"
"		x = (1.0 - cos(M_PI * x)) / 2.0;\n"
"	for (int i = -1; i >= n; i--)\n"
"		x = acos(1.0 - 2.0 * x) / M_PI;\n"
"	return x;\n"
"}\n"
"\n"
"float scale_expand_towards_1(float x, int n)\n"
"{\n"
"	for (int i = 1; i <= n; i++)\n"
"		x = sin(x * M_PI / 2.0);\n"
"	for (int i = -1; i >= n; i--)\n"
"		x = asin(x) * 2.0 / M_PI;\n"
"	return x;\n"
"}\n"
"\n"
"vec3 color_map_blue_white_red(float x)\n"
"{\n"
"	vec3 c = vec3(0);\n"
"	if (x < 0.0)\n"
"		c.b = 1.0;\n"
"	else if (x < 0.5)\n"
"	{\n"
"		c.r = 2.0 * x;\n"
"		c.g = 2.0 * x;\n"
"		c.b = 1.0;\n"
"	}\n"
"	else if (x < 1.0)\n"
"	{\n"
"		c.r = 1.0;\n"
"		c.g = 2.0 - 2.0 * x;\n"
"		c.b = 2.0 - 2.0 * x;\n"
"	}\n"
"	else\n"
"		c.r = 1.0;\n"
"	return c;\n"
"}\n"
"\n"
"vec3 color_map_cyan_white_red(float x)\n"
"{\n"
"	if (x < 0.0)\n"
"		return vec3(0.0, 0.0, 1.0) ;\n"
"\n"
"	if (x < 0.5)\n"
"		return vec3(2.0 * x, 1.0 , 1.0);\n"
"\n"
"	if (x < 1.0)\n"
"		return vec3(1.0, 2.0 - 2.0 * x, 2.0 - 2.0 * x);\n"
"\n"
"	return vec3(1.0, 0.0, 0.0) ;\n"
"}\n"
"\n"
"vec3 color_map_BCGYR(float x)\n"
"{\n"
"	if (x < 0.0)\n"
"		return vec3(0.0, 0.0, 1.0) ;\n"
"\n"
"	if (x < 0.25)\n"
"		return vec3(0.0, 4.0 * x, 1.0);\n"
"\n"
"	if (x < 0.5)\n"
"		return vec3(0.0, 1.0 , 2.0 - 4.0 * x);\n"
"\n"
"	if (x < 0.75)\n"
"		return vec3(4.0 * x - 2.0, 1.0, 0.0);\n"
"\n"
"	if (x < 1.0)\n"
"		return vec3(1.0, 4.0 - 4.0 * x, 0.0);\n"
"\n"
"	return vec3(1.0, 0.0, 0.0) ;\n"
"}\n"
"\n"
"vec3 color_map_blue_green_red(float x)\n"
"{\n"
"	if (x < 0.0)\n"
"		return vec3(0.0, 0.0, 1.0) ;\n"
"\n"
"	if (x < 0.5)\n"
"		return vec3(0.0, 2.0 * x, 1.0 - 2.0 * x);\n"
"\n"
"	if (x < 1.0)\n"
"		return vec3(2.0 * x - 1.0, 2.0 - 2.0 * x, 0.0);\n"
"\n"
"	return vec3(1.0, 0.0, 0.0) ;\n"
"}\n"
"\n"
"void main ()\n"
"{\n"
"	gl_Position = ModelViewProjectionMatrix * vec4 (VertexPosition, 1.0);\n"
"	float value =\n"
"		scale_expand_within_0_1(\n"
"			scale_and_clamp_to_0_1(\n"
"				VertexScalar,\n"
"				minValue,\n"
"				maxValue\n"
"			),\n"
"			expansion\n"
"		);\n"
"\n"
"	switch(colorMap)\n"
"	{\n"
"		case 0 : color = color_map_blue_white_red(value); break;\n"
"		case 1 : color = color_map_cyan_white_red(value); break;\n"
"		case 2 : color = color_map_BCGYR(value); break;\n"
"		case 3 : color = color_map_blue_green_red(value); break;\n"
"	}\n"
"\n"
"	scalar = value;\n"
"}\n";

